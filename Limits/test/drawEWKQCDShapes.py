
import ROOT as rt
rt.gStyle.SetOptStat(0)

rootInput = rt.TFile.Open("datacard.root","read")

endResult = "Region Group Chi2 ndf norm lin log" + "\n"

extraResult = "Region name nPar p1 p2 p3 p4 norm chi2 ndf\n"

for region in ["lowCut","lowSVJ2","highCut","highSVJ2"]:
	if "SVJ2" in region:
		mtCut = 3800
		ndf = 20
	else:
		mtCut = 6000
		ndf = 42
	
	qcdHist = rootInput.Get(region+"_2018/QCD")
	ttjHist = rootInput.Get(region+"_2018/TT")
	wjeHist = rootInput.Get(region+"_2018/WJets")
	zjeHist = rootInput.Get(region+"_2018/ZJets")
	for iBin in range(qcdHist.GetNbinsX()+1): # .FillRandom doesn't like negative bin values in reference histo
		if qcdHist.GetBinContent(iBin) < 0:   # smallest value is about -0.02 in some TTJ histos
			qcdHist.SetBinContent(iBin,0)
		if ttjHist.GetBinContent(iBin) < 0:
			ttjHist.SetBinContent(iBin,0)
		if wjeHist.GetBinContent(iBin) < 0:
			wjeHist.SetBinContent(iBin,0)
		if zjeHist.GetBinContent(iBin) < 0:
			zjeHist.SetBinContent(iBin,0)

	qcdToy = qcdHist.Clone("qcdToy")
	ttjToy = ttjHist.Clone("ttjToy")
	wjeToy = wjeHist.Clone("wjeToy")
	zjeToy = zjeHist.Clone("zjeToy")

	for iBin in range(qcdToy.GetNbinsX()+1): # Clone also saves bin data, set everything to 0
		qcdToy.SetBinContent(iBin,0)		# because chi^2 fit ignores bins with zero value AND zero error
		ttjToy.SetBinContent(iBin,0)
		wjeToy.SetBinContent(iBin,0)
		zjeToy.SetBinContent(iBin,0)
		qcdToy.SetBinError(iBin,0)
		ttjToy.SetBinError(iBin,0)
		wjeToy.SetBinError(iBin,0)
		zjeToy.SetBinError(iBin,0)
	qcdToy.Sumw2()
	ttjToy.Sumw2()
	wjeToy.Sumw2()
	zjeToy.Sumw2()
	qcdToy.FillRandom(qcdHist,int(qcdHist.Integral()))
	ttjToy.FillRandom(ttjHist,int(ttjHist.Integral()))
	wjeToy.FillRandom(wjeHist,int(wjeHist.Integral()))
	zjeToy.FillRandom(zjeHist,int(zjeHist.Integral()))

	#for iBin in range(qcdToy.GetNbinsX()+1):
	#	qcdToy.SetBinError(iBin,rt.TMath.Sqrt(qcdToy.GetBinContent(iBin)))
	#	ttjToy.SetBinError(iBin,rt.TMath.Sqrt(ttjToy.GetBinContent(iBin)))
	#	wjeToy.SetBinError(iBin,rt.TMath.Sqrt(wjeToy.GetBinContent(iBin)))
	#	zjeToy.SetBinError(iBin,rt.TMath.Sqrt(zjeToy.GetBinContent(iBin)))


	#Q, T, QT, WZ, TWZ
	func_A = rt.TF1("fit_A","[2]*pow(1-x/13000,[0]+[1]*log(x/13000))",1500,mtCut)
	#func_A.SetParameter(0,10)
	#func_A.SetParLimits(0,0,100)
	#func_A.SetParameter(1,10)
	#func_A.SetParLimits(1,-100,100)
	#func_A.SetParameter(2,10000)
	#func_A.SetParLimits(2,0,10000)
	func_q = rt.TF1("fit_q","[2]*pow(1-x/13000,[0]+[1]*log(x/13000))",1500,mtCut)
	#func_q.SetParameter(0,10)
	#func_q.SetParLimits(0,0,100)
	#func_q.SetParameter(1,10)
	#func_q.SetParLimits(1,-100,100)
	#func_q.SetParameter(2,10000)
	#func_q.SetParLimits(2,0,10000)
	func_t = rt.TF1("fit_t","[2]*pow(1-x/13000,[0]+[1]*log(x/13000))",1500,mtCut)
	#func_t.SetParameter(0,10)
	#func_t.SetParLimits(0,0,100)
	#func_t.SetParameter(1,10)
	#func_t.SetParLimits(1,-100,100)
	#func_t.SetParameter(2,10)
	#func_t.SetParLimits(2,0,10000)
	func_qt = rt.TF1("fit_wt","[2]*pow(1-x/13000,[0]+[1]*log(x/13000))",1500,mtCut)
	#func_qt.SetParameter(0,10)
	#func_qt.SetParLimits(0,0,100)
	#func_qt.SetParameter(1,10)
	#func_qt.SetParLimits(1,-100,100)
	#func_qt.SetParameter(2,10)
	#func_qt.SetParLimits(2,0,10000)
	func_twz = rt.TF1("fit_twz","[2]*pow(1-x/13000,[0]+[1]*log(x/13000))",1500,mtCut)
	#func_twz.SetParameter(0,10)
	#func_twz.SetParLimits(0,0,100)
	#func_twz.SetParameter(1,10)
	#func_twz.SetParLimits(1,-100,100)
	#func_twz.SetParameter(2,10)
	#func_twz.SetParLimits(2,0,10000)
	func_wz = rt.TF1("fit_wz","[2]*pow(1-x/13000,[0]+[1]*log(x/13000))",1500,mtCut)
	#func_wz.SetParameter(0,10)
	#func_wz.SetParLimits(0,0,100)
	#func_wz.SetParameter(1,10)
	#func_wz.SetParLimits(1,-100,100)
	#func_wz.SetParameter(2,10)
	#func_wz.SetParLimits(2,0,10000)

	hist_A = qcdToy.Clone("hist_a")
	hist_A.Sumw2()
	hist_A.SetLineColor(rt.kBlack)
	hist_A.SetMarkerColor(hist_A.GetLineColor())
	func_A.SetLineColor(hist_A.GetLineColor())
	hist_A.Add(ttjToy)
	hist_A.Add(wjeToy)
	hist_A.Add(zjeToy)
	#hist_A.Scale(1/hist_A.Integral())
	hist_A.Fit(func_A,"QR")
	hist_A.SetTitle("All {:.2f}".format(func_A.GetChisquare()/ndf))

	hist_q = qcdToy.Clone("hist_q")
	hist_q.Sumw2()
	hist_q.SetLineColor(rt.kRed+2)
	hist_q.SetMarkerColor(hist_q.GetLineColor())
	func_q.SetLineColor(hist_q.GetLineColor())
	#hist_q.Scale(1/hist_q.Integral())
	hist_q.Fit(func_q,"QR")
	hist_q.SetTitle("QCD {:.2f}".format(func_q.GetChisquare()/ndf))

	hist_t = ttjToy.Clone("hist_t")
	hist_t.Sumw2()
	hist_t.SetLineColor(rt.kBlue+2)
	hist_t.SetMarkerColor(hist_t.GetLineColor())
	func_t.SetLineColor(hist_t.GetLineColor())
	#hist_t.Scale(1/hist_t.Integral())
	hist_t.Fit(func_t,"QR")
	hist_t.SetTitle("TT {:.2f}".format(func_t.GetChisquare()/ndf))

	hist_qt = qcdToy.Clone("hist_qt")
	hist_qt.Sumw2()
	hist_qt.SetLineColor(rt.kMagenta+2)
	hist_qt.SetMarkerColor(hist_qt.GetLineColor())
	func_qt.SetLineColor(hist_qt.GetLineColor())
	hist_qt.Add(ttjToy)
	#hist_qt.Scale(1/hist_qt.Integral())
	hist_qt.Fit(func_qt,"QR")
	hist_qt.SetTitle("QCD + TT {:.2f}".format(func_qt.GetChisquare()/ndf))

	hist_twz = ttjToy.Clone("hist_twz")
	hist_twz.Sumw2()
	hist_twz.SetLineColor(rt.kCyan+2)
	hist_twz.SetMarkerColor(hist_twz.GetLineColor())
	func_twz.SetLineColor(hist_twz.GetLineColor())
	hist_twz.Add(wjeToy)
	hist_twz.Add(zjeToy)
	#hist_twz.Scale(1/hist_twz.Integral())
	hist_twz.Fit(func_twz,"QR")
	hist_twz.SetTitle("TT + W + Z {:.2f}".format(func_twz.GetChisquare()/ndf))

	hist_wz = wjeToy.Clone("hist_wz")
	hist_wz.Sumw2()
	hist_wz.SetLineColor(rt.kGreen+2)
	hist_wz.SetMarkerColor(hist_wz.GetLineColor())
	func_wz.SetLineColor(hist_wz.GetLineColor())
	hist_wz.Add(zjeToy)
	#hist_wz.Scale(1/hist_wz.Integral())
	hist_wz.Fit(func_wz,"QR")
	hist_wz.SetTitle("W + Z {:.2f}".format(func_wz.GetChisquare()/ndf))

	endResult += region +"\tAll\t{:.2f}\t{}\t{:.2f}\t{:.2f}\t{:.2f}".format(func_A.GetChisquare(),ndf,func_A.GetParameter(2),func_A.GetParameter(0),func_A.GetParameter(1)) + "\n"
	endResult += region +"\tQ\t{:.2f}\t{}\t{:.2f}\t{:.2f}\t{:.2f}".format(func_q.GetChisquare(),ndf,func_q.GetParameter(2),func_q.GetParameter(0),func_q.GetParameter(1)) + "\n"
	endResult += region +"\tT\t{:.2f}\t{}\t{:.2f}\t{:.2f}\t{:.2f}".format(func_t.GetChisquare(),ndf,func_t.GetParameter(2),func_t.GetParameter(0),func_t.GetParameter(1)) + "\n"
	endResult += region +"\tQT\t{:.2f}\t{}\t{:.2f}\t{:.2f}\t{:.2f}".format(func_qt.GetChisquare(),ndf,func_qt.GetParameter(2),func_qt.GetParameter(0),func_qt.GetParameter(1)) + "\n"
	endResult += region +"\tTWZ\t{:.2f}\t{}\t{:.2f}\t{:.2f}\t{:.2f}".format(func_twz.GetChisquare(),ndf,func_twz.GetParameter(2),func_twz.GetParameter(0),func_twz.GetParameter(1)) + "\n"
	endResult += region +"\tWZ\t{:.2f}\t{}\t{:.2f}\t{:.2f}\t{:.2f}".format(func_wz.GetChisquare(),ndf,func_wz.GetParameter(2),func_wz.GetParameter(0),func_wz.GetParameter(1)) + "\n"


	hist_A.GetYaxis().SetRangeUser(0.09,200000)
	hist_q.GetYaxis().SetRangeUser(0.09,200000)
	hist_t.GetYaxis().SetRangeUser(0.09,200000)
	hist_qt.GetYaxis().SetRangeUser(0.09,200000)
	hist_twz.GetYaxis().SetRangeUser(0.09,200000)
	hist_wz.GetYaxis().SetRangeUser(0.09,200000)
	hist_A.GetXaxis().SetRangeUser(0,mtCut)
	hist_q.GetXaxis().SetRangeUser(0,mtCut)
	hist_t.GetXaxis().SetRangeUser(0,mtCut)
	hist_qt.GetXaxis().SetRangeUser(0,mtCut)
	hist_twz.GetXaxis().SetRangeUser(0,mtCut)
	hist_wz.GetXaxis().SetRangeUser(0,mtCut)

	c1 = rt.TCanvas("c1","c1",1000,1000)
	c1.SetLogy()
	hist_A.Draw()
	hist_q.Draw("same")
	hist_t.Draw("same")
	hist_wz.Draw("same")
	c1.BuildLegend(0.5,0.7,0.9,0.9)
	c1.SaveAs("ewkqcd/q_t_wz_"+region+".png")

	hist_A.Draw()
	hist_qt.Draw("same")
	hist_wz.Draw("same")
	c1.BuildLegend(0.5,0.7,0.9,0.9)
	c1.SaveAs("ewkqcd/qt_wz_"+region+".png")


	hist_A.Draw()
	hist_q.Draw("same")
	hist_twz.Draw("same")
	c1.BuildLegend(0.5,0.7,0.9,0.9)
	c1.SaveAs("ewkqcd/q_twz_"+region+".png")

	

	listOfHists = [hist_A, hist_q, hist_t, hist_qt, hist_twz, hist_wz]
	for hist in listOfHists:
		histName = hist.GetName().split("_")[1].upper()

		func_01 = rt.TF1("fit_01","[0]*pow(x/13000,[1])",1500,mtCut)
		func_02 = rt.TF1("fit_02","[0]*pow(x/13000,[1]+[2]*log(x/13000))",1500,mtCut)
		func_10 = rt.TF1("fit_10","[0]*pow(1-x/13000,[1])",1500,mtCut)
		func_11 = rt.TF1("fit_11","[0]*pow(1-x/13000,[1])*pow(x/13000,[2])",1500,mtCut)
		func_12 = rt.TF1("fit_12","[0]*pow(1-x/13000,[1])*pow(x/13000,[2]+[3]*log(x/13000))",1500,mtCut)
		func_20 = rt.TF1("fit_20","[0]*pow(1-x/13000,[1]+[2]*log(x/13000))",1500,mtCut)
		func_21 = rt.TF1("fit_21","[0]*pow(1-x/13000,[1]+[2]*log(x/13000))*pow(x/13000,[3])",1500,mtCut)
		func_22 = rt.TF1("fit_22","[0]*pow(1-x/13000,[1]+[2]*log(x/13000))*pow(x/13000,[3]+[4]*log(x/13000))",1500,mtCut)
		func_01.SetLineColor(rt.kBlack)
		func_02.SetLineColor(rt.kRed+2)
		func_10.SetLineColor(rt.kGreen+2)
		func_11.SetLineColor(rt.kBlue+2)
		func_12.SetLineColor(rt.kYellow+2)
		func_20.SetLineColor(rt.kMagenta+2)
		func_21.SetLineColor(rt.kCyan+2)
		func_22.SetLineColor(rt.kViolet+2)

		hist.SetTitle(histName)
		hist.Fit(func_01,"QR")
		hist.Fit(func_02,"QR+")
		hist.Fit(func_10,"QR+")
		hist.Fit(func_11,"QR+")
		hist.Fit(func_12,"QR+")
		hist.Fit(func_20,"QR+")
		hist.Fit(func_21,"QR+")
		hist.Fit(func_22,"QR+")
		c1.SetLogy(1)
		hist.Draw()
		leg = c1.BuildLegend(0.5,0.7,0.9,0.9)
		leg.AddEntry(func_01,"x^{p} " + "{:.2f}".format(func_01.GetChisquare()/(ndf+3-2)),"L")
		leg.AddEntry(func_02,"x^{p+plog} " + "{:.2f}".format(func_02.GetChisquare()/(ndf+3-3)),"L")
		leg.AddEntry(func_10,"(1-x)^{p} " + "{:.2f}".format(func_10.GetChisquare()/(ndf+3-2)),"L")
		leg.AddEntry(func_11,"(1-x)^{p}*x^{p} " + "{:.2f}".format(func_11.GetChisquare()/(ndf+3-3)),"L")
		leg.AddEntry(func_12,"(1-x)^{p}*x^{p+plog} " + "{:.2f}".format(func_12.GetChisquare()/(ndf+3-4)),"L")
		leg.AddEntry(func_20,"(1-x)^{p+plog} " + "{:.2f}".format(func_20.GetChisquare()/(ndf+3-3)),"L")
		leg.AddEntry(func_21,"(1-x)^{p+plog}*x^{p} " + "{:.2f}".format(func_21.GetChisquare()/(ndf+3-4)),"L")
		leg.AddEntry(func_22,"(1-x)^{p+plog}*x^{p+plog} " + "{:.2f}".format(func_22.GetChisquare()/(ndf+3-5)),"L")
		c1.SaveAs("ewkqcd/"+histName+"_"+region+"_all8.png")

		hist.GetListOfFunctions().Clear()

		if histName == "A":
			c1.SetLogy(1)
			hist.Fit(func_11,"QR")
			hist.Fit(func_12,"QR+")
			hist.Fit(func_21,"QR+")
			hist.Draw()
			leg = c1.BuildLegend(0.5,0.7,0.9,0.9)
			leg.AddEntry(func_11,"(1-x)^{p}*x^{p} " + "{:.2f}".format(func_11.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_12,"(1-x)^{p}*x^{p+plog} " + "{:.2f}".format(func_12.GetChisquare()/(ndf+3-4)),"L")
			leg.AddEntry(func_21,"(1-x)^{p+plog}*x^{p} " + "{:.2f}".format(func_21.GetChisquare()/(ndf+3-4)),"L")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_best.png")
			hist.GetListOfFunctions().Clear()
			hist.GetYaxis().SetRange(0,0)
			c1.SetLogy(0)
			histRes_11 = hist.Clone("histRes_11")
			histRes_11.Divide(func_11)
			histRes_12 = hist.Clone("histRes_12")
			histRes_12.Divide(func_12)
			histRes_21 = hist.Clone("histRes_21")
			histRes_21.Divide(func_21)
			histRes_11.SetLineColor(func_11.GetLineColor())
			histRes_12.SetLineColor(func_12.GetLineColor())
			histRes_21.SetLineColor(func_21.GetLineColor())
			histRes_11.SetMarkerColor(func_11.GetLineColor())
			histRes_12.SetMarkerColor(func_12.GetLineColor())
			histRes_21.SetMarkerColor(func_21.GetLineColor())
			histRes_11.Draw()
			histRes_12.Draw("same")
			histRes_21.Draw("same")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_bestRes.png")
		elif histName == "Q":
			c1.SetLogy(1)
			hist.Fit(func_11,"QR")
			hist.Fit(func_12,"QR+")
			hist.Fit(func_21,"QR+")
			hist.Fit(func_22,"QR+")
			hist.Draw()
			leg = c1.BuildLegend(0.5,0.7,0.9,0.9)
			leg.AddEntry(func_11,"(1-x)^{p}*x^{p} " + "{:.2f}".format(func_11.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_12,"(1-x)^{p}*x^{p+plog} " + "{:.2f}".format(func_12.GetChisquare()/(ndf+3-4)),"L")
			leg.AddEntry(func_21,"(1-x)^{p+plog}*x^{p} " + "{:.2f}".format(func_21.GetChisquare()/(ndf+3-4)),"L")
			leg.AddEntry(func_22,"(1-x)^{p+plog}*x^{p+plog} " + "{:.2f}".format(func_22.GetChisquare()/(ndf+3-5)),"L")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_best.png")
			hist.GetListOfFunctions().Clear()
			hist.GetYaxis().SetRange(0,0)
			c1.SetLogy(0)
			histRes_11 = hist.Clone("histRes_11")
			histRes_11.Divide(func_11)
			histRes_12 = hist.Clone("histRes_12")
			histRes_12.Divide(func_12)
			histRes_21 = hist.Clone("histRes_21")
			histRes_21.Divide(func_21)
			histRes_22 = hist.Clone("histRes_22")
			histRes_22.Divide(func_22)
			histRes_11.SetLineColor(func_11.GetLineColor())
			histRes_12.SetLineColor(func_12.GetLineColor())
			histRes_21.SetLineColor(func_21.GetLineColor())
			histRes_22.SetLineColor(func_22.GetLineColor())
			histRes_11.SetMarkerColor(func_11.GetLineColor())
			histRes_12.SetMarkerColor(func_12.GetLineColor())
			histRes_21.SetMarkerColor(func_21.GetLineColor())
			histRes_22.SetMarkerColor(func_22.GetLineColor())
			histRes_11.Draw()
			histRes_12.Draw("same")
			histRes_21.Draw("same")
			histRes_22.Draw("same")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_bestRes.png")
		elif histName == "QT":
			c1.SetLogy(1)
			hist.Fit(func_02,"QR")
			hist.Fit(func_11,"QR+")
			hist.Fit(func_20,"QR+")
			hist.Fit(func_21,"QR+")
			hist.Fit(func_22,"QR+")
			hist.Draw()
			leg = c1.BuildLegend(0.5,0.7,0.9,0.9)
			leg.AddEntry(func_02,"x^{p+plog} " + "{:.2f}".format(func_02.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_11,"(1-x)^{p}*x^{p} " + "{:.2f}".format(func_11.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_20,"(1-x)^{p+plog} " + "{:.2f}".format(func_20.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_21,"(1-x)^{p+plog}*x^{p} " + "{:.2f}".format(func_21.GetChisquare()/(ndf+3-4)),"L")
			leg.AddEntry(func_22,"(1-x)^{p+plog}*x^{p+plog} " + "{:.2f}".format(func_22.GetChisquare()/(ndf+3-5)),"L")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_best.png")
			hist.GetListOfFunctions().Clear()
			hist.GetYaxis().SetRange(0,0)
			c1.SetLogy(0)
			histRes_02 = hist.Clone("histRes_02")
			histRes_02.Divide(func_02)
			histRes_11 = hist.Clone("histRes_11")
			histRes_11.Divide(func_11)
			histRes_12 = hist.Clone("histRes_12")
			histRes_12.Divide(func_12)
			histRes_21 = hist.Clone("histRes_21")
			histRes_21.Divide(func_21)
			histRes_22 = hist.Clone("histRes_22")
			histRes_22.Divide(func_22)
			histRes_02.SetLineColor(func_02.GetLineColor())
			histRes_11.SetLineColor(func_11.GetLineColor())
			histRes_12.SetLineColor(func_12.GetLineColor())
			histRes_21.SetLineColor(func_21.GetLineColor())
			histRes_22.SetLineColor(func_22.GetLineColor())
			histRes_02.SetMarkerColor(func_02.GetLineColor())
			histRes_11.SetMarkerColor(func_11.GetLineColor())
			histRes_12.SetMarkerColor(func_12.GetLineColor())
			histRes_21.SetMarkerColor(func_21.GetLineColor())
			histRes_22.SetMarkerColor(func_22.GetLineColor())
			histRes_02.Draw()
			histRes_11.Draw("same")
			histRes_12.Draw("same")
			histRes_21.Draw("same")
			histRes_22.Draw("same")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_bestRes.png")
		elif histName == "T":
			c1.SetLogy(1)
			hist.Fit(func_01,"QR+")
			hist.Fit(func_02,"QR+")
			hist.Fit(func_11,"QR+")
			hist.Fit(func_20,"QR+")
			hist.Fit(func_21,"QR+")
			hist.Fit(func_22,"QR+")
			hist.Draw()
			leg = c1.BuildLegend(0.5,0.7,0.9,0.9)
			leg.AddEntry(func_01,"x^{p} " + "{:.2f}".format(func_01.GetChisquare()/(ndf+3-2)),"L")
			leg.AddEntry(func_02,"x^{p+plog} " + "{:.2f}".format(func_02.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_11,"(1-x)^{p}*x^{p} " + "{:.2f}".format(func_11.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_20,"(1-x)^{p+plog} " + "{:.2f}".format(func_20.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_21,"(1-x)^{p+plog}*x^{p} " + "{:.2f}".format(func_21.GetChisquare()/(ndf+3-4)),"L")
			leg.AddEntry(func_22,"(1-x)^{p+plog}*x^{p+plog} " + "{:.2f}".format(func_22.GetChisquare()/(ndf+3-5)),"L")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_best.png")
			hist.GetListOfFunctions().Clear()
			hist.GetYaxis().SetRange(0,0)
			c1.SetLogy(0)
			histRes_01 = hist.Clone("histRes_01")
			histRes_01.Divide(func_01)
			histRes_02 = hist.Clone("histRes_02")
			histRes_02.Divide(func_02)
			histRes_11 = hist.Clone("histRes_11")
			histRes_11.Divide(func_11)
			histRes_12 = hist.Clone("histRes_12")
			histRes_12.Divide(func_12)
			histRes_21 = hist.Clone("histRes_21")
			histRes_21.Divide(func_21)
			histRes_22 = hist.Clone("histRes_22")
			histRes_22.Divide(func_22)
			histRes_01.SetLineColor(func_01.GetLineColor())
			histRes_02.SetLineColor(func_02.GetLineColor())
			histRes_11.SetLineColor(func_11.GetLineColor())
			histRes_12.SetLineColor(func_12.GetLineColor())
			histRes_21.SetLineColor(func_21.GetLineColor())
			histRes_22.SetLineColor(func_22.GetLineColor())
			histRes_01.SetMarkerColor(func_01.GetLineColor())
			histRes_02.SetMarkerColor(func_02.GetLineColor())
			histRes_11.SetMarkerColor(func_11.GetLineColor())
			histRes_12.SetMarkerColor(func_12.GetLineColor())
			histRes_21.SetMarkerColor(func_21.GetLineColor())
			histRes_22.SetMarkerColor(func_22.GetLineColor())
			histRes_01.Draw()
			histRes_02.Draw("same")
			histRes_11.Draw("same")
			histRes_12.Draw("same")
			histRes_21.Draw("same")
			histRes_22.Draw("same")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_bestRes.png")
		elif histName == "TWZ":
			c1.SetLogy(1)
			hist.Fit(func_02,"QR")
			hist.Fit(func_11,"QR+")
			hist.Fit(func_20,"QR+")
			hist.Fit(func_21,"QR+")
			hist.Draw()
			leg = c1.BuildLegend(0.5,0.7,0.9,0.9)
			leg.AddEntry(func_02,"x^{p+plog} " + "{:.2f}".format(func_02.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_11,"(1-x)^{p}*x^{p} " + "{:.2f}".format(func_11.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_20,"(1-x)^{p+plog} " + "{:.2f}".format(func_20.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_21,"(1-x)^{p+plog}*x^{p} " + "{:.2f}".format(func_21.GetChisquare()/(ndf+3-4)),"L")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_best.png")
			hist.GetListOfFunctions().Clear()
			hist.GetYaxis().SetRange(0,0)
			c1.SetLogy(0)
			histRes_02 = hist.Clone("histRes_02")
			histRes_02.Divide(func_02)
			histRes_11 = hist.Clone("histRes_11")
			histRes_11.Divide(func_11)
			histRes_20 = hist.Clone("histRes_20")
			histRes_20.Divide(func_20)
			histRes_21 = hist.Clone("histRes_21")
			histRes_21.Divide(func_21)
			histRes_02.SetLineColor(func_02.GetLineColor())
			histRes_11.SetLineColor(func_11.GetLineColor())
			histRes_20.SetLineColor(func_20.GetLineColor())
			histRes_21.SetLineColor(func_21.GetLineColor())
			histRes_02.SetMarkerColor(func_02.GetLineColor())
			histRes_11.SetMarkerColor(func_11.GetLineColor())
			histRes_20.SetMarkerColor(func_20.GetLineColor())
			histRes_21.SetMarkerColor(func_21.GetLineColor())
			histRes_02.Draw()
			histRes_11.Draw("same")
			histRes_20.Draw("same")
			histRes_21.Draw("same")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_bestRes.png")
		elif histName == "WZ":
			c1.SetLogy(1)
			hist.Fit(func_02,"QR")
			hist.Fit(func_11,"QR+")
			hist.Fit(func_20,"QR+")
			hist.Fit(func_21,"QR+")
			hist.Fit(func_22,"QR+")
			hist.Draw()
			leg = c1.BuildLegend(0.5,0.7,0.9,0.9)
			leg.AddEntry(func_02,"x^{p+plog} " + "{:.2f}".format(func_02.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_11,"(1-x)^{p}*x^{p} " + "{:.2f}".format(func_11.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_20,"(1-x)^{p+plog} " + "{:.2f}".format(func_20.GetChisquare()/(ndf+3-3)),"L")
			leg.AddEntry(func_21,"(1-x)^{p+plog}*x^{p} " + "{:.2f}".format(func_21.GetChisquare()/(ndf+3-4)),"L")
			leg.AddEntry(func_22,"(1-x)^{p+plog}*x^{p+plog} " + "{:.2f}".format(func_22.GetChisquare()/(ndf+3-5)),"L")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_best.png")
			hist.GetListOfFunctions().Clear()
			hist.GetYaxis().SetRange(0,0)
			c1.SetLogy(0)
			histRes_02 = hist.Clone("histRes_02")
			histRes_02.Divide(func_02)
			histRes_11 = hist.Clone("histRes_11")
			histRes_11.Divide(func_11)
			histRes_12 = hist.Clone("histRes_12")
			histRes_12.Divide(func_12)
			histRes_21 = hist.Clone("histRes_21")
			histRes_21.Divide(func_21)
			histRes_22 = hist.Clone("histRes_22")
			histRes_22.Divide(func_22)
			histRes_02.SetLineColor(func_02.GetLineColor())
			histRes_11.SetLineColor(func_11.GetLineColor())
			histRes_12.SetLineColor(func_12.GetLineColor())
			histRes_21.SetLineColor(func_21.GetLineColor())
			histRes_22.SetLineColor(func_22.GetLineColor())
			histRes_02.SetMarkerColor(func_02.GetLineColor())
			histRes_11.SetMarkerColor(func_11.GetLineColor())
			histRes_12.SetMarkerColor(func_12.GetLineColor())
			histRes_21.SetMarkerColor(func_21.GetLineColor())
			histRes_22.SetMarkerColor(func_22.GetLineColor())
			histRes_02.Draw()
			histRes_11.Draw("same")
			histRes_12.Draw("same")
			histRes_21.Draw("same")
			histRes_22.Draw("same")
			c1.SaveAs("ewkqcd/"+histName+"_"+region+"_bestRes.png")

		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	1,	0						,	0						,	func_01.GetParameter(1)	,	0						,	func_01.GetParameter(0),	func_01.GetChisquare(),	ndf+1)
		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	2,	0						,	0						,	func_02.GetParameter(1)	,	func_02.GetParameter(2)	,	func_02.GetParameter(0),	func_02.GetChisquare(),	ndf)
		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	10,	func_10.GetParameter(1)	,	0						,	0						,	0						,	func_10.GetParameter(0),	func_10.GetChisquare(),	ndf+1)
		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	11,	func_11.GetParameter(1)	,	0						,	func_11.GetParameter(2)	,	0						,	func_11.GetParameter(0),	func_11.GetChisquare(),	ndf)
		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	12,	func_12.GetParameter(1)	,	0						,	func_12.GetParameter(2)	,	func_12.GetParameter(3)	,	func_12.GetParameter(0),	func_12.GetChisquare(),	ndf-1)
		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	20,	func_20.GetParameter(1)	,	func_20.GetParameter(2)	,	0						,	0						,	func_20.GetParameter(0),	func_20.GetChisquare(),	ndf)
		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	21,	func_21.GetParameter(1)	,	func_21.GetParameter(2)	,	func_21.GetParameter(3)	,	0						,	func_21.GetParameter(0),	func_21.GetChisquare(),	ndf-1)
		extraResult += "{}\t{}\t{}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{:.2f}\t{}\n".format(region,	histName,	22,	func_22.GetParameter(1)	,	func_22.GetParameter(2)	,	func_22.GetParameter(3)	,	func_22.GetParameter(4)	,	func_22.GetParameter(0),	func_22.GetChisquare(),	ndf-2)

print(endResult)
print(extraResult)






